// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;



 // } Driver Code Ends


class Solution{
  public:
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
        if(k==0) return 0;
        vector<double> prefix(a.size()+1,0);
        double logk = log(k);
        for(int i=0;i<a.size();i++){
            prefix[i+1] = prefix[i] + log(a[i]);
        }
        
        int result =0;
        for(int i=0;i<prefix.size();i++){
            int low = i+1,high = prefix.size();
            while(low < high){
                int mid  = low + (high-low)/2;
                if(prefix[mid] < prefix[i]+ logk) low = mid+1;
                high = mid;
            }
            result += low -i-1;
        }
        return result;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        long long int k;
        cin >> n >> k;
        vector<int> arr(n);
        for (i = 0; i < n; i++) cin >> arr[i];
        Solution obj;
        cout << obj.countSubArrayProductLessThanK(arr, n, k) << endl;
    }
    return 0;
}
  // } Driver Code Ends